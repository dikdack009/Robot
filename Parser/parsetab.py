
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASSIGN BACK BAR BOOLEAN CBOOLEAN CINT CLR DEC DO ELSE EMP EQUAL FALSE GT IF INC INT INT_DECIMAL LEFT LEFT_BRACKET LEFT_SQUARE_BRACKET LOOK LT MAP NEW_LINE NOT OR PROC RIGHT RIGHT_BRACKET RIGHT_SQUARE_BRACKET SET STEP TRUE VARIABLE WHILEprogram : sentence_listsentence_list : sentence_list single_sentence\n                         | single_sentencesingle_sentence : declaration NEW_LINE\n                           | assignment NEW_LINE\n                           | if NEW_LINE\n                           | while NEW_LINE\n                           | proc NEW_LINE\n                           | proc_call NEW_LINE\n                           | robot_action NEW_LINE\n                           | inc NEW_LINE\n                           | dec NEW_LINE\n                           | logical NEW_LINEdeclaration : type VARIABLE EQUAL expression\n                        | MAP VARIABLEtype : int\n                | booleanint : INT\n                | CINTboolean : BOOLEAN\n                    | CBOOLEANassignment : VARIABLE ASSIGN expressionif : IF logical LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET\n                    | IF logical LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET ELSE LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKETinc : INC expression expressiondec : DEC expression expressionwhile : WHILE logical NEW_LINE DO single_sentence\n                            | WHILE logical NEW_LINE DO LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKETproc : PROC VARIABLE LEFT_SQUARE_BRACKET proc_args RIGHT_SQUARE_BRACKET LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKETproc_args : VARIABLE\n                        | proc_args VARIABLEproc_call : VARIABLE LEFT_SQUARE_BRACKET proc_args RIGHT_SQUARE_BRACKETrobot_action : STEP\n                        | BACK\n                        | RIGHT\n                        | LEFT\n                        | LOOKmap_action : BAR LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET\n                        | EMP LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET\n                        | SET LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET\n                        | CLR LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKETexpression : math_expression\n                      | VARIABLE\n                      | logical\n                      | robot_actionlogical : not\n                    | or\n                    | lt\n                    | gt\n                    | TRUE\n                    | FALSEnot : NOT logical\n                    | NOT proc_callor : OR or_arg or_argor_arg : logical\n                        | proc_calllt : LT math_expression math_expressiongt : GT math_expression math_expressionmath_expression : inc\n                            | dec\n                            | INT_DECIMAL'
    
_lr_action_items = {'MAP':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[16,16,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,16,16,16,16,16,16,16,16,16,]),'VARIABLE':([0,2,3,14,16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,56,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,80,81,84,85,86,87,88,89,91,92,93,94,95,96,101,104,105,108,109,111,],[15,15,-3,54,57,60,-33,-34,-35,-36,-37,63,63,-46,-47,-48,-49,-50,-51,-16,-17,72,72,-18,-19,-20,-21,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,63,80,63,-42,-43,-44,-45,-59,-60,-61,63,-52,-53,72,-55,-56,63,-30,91,80,-25,-26,-54,-57,-58,-31,-32,15,15,91,15,15,15,15,15,15,15,]),'IF':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[17,17,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,17,17,17,17,17,17,17,17,17,]),'WHILE':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[18,18,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,18,18,18,18,18,18,18,18,18,]),'PROC':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[19,19,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,19,19,19,19,19,19,19,19,19,]),'STEP':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[20,20,-3,-33,-34,-35,-36,-37,20,20,-46,-47,-48,-49,-50,-51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,20,20,-42,-43,-44,-45,-59,-60,-61,20,-52,-53,-55,-56,20,-25,-26,-54,-57,-58,-32,20,20,20,20,20,20,20,20,20,]),'BACK':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[21,21,-3,-33,-34,-35,-36,-37,21,21,-46,-47,-48,-49,-50,-51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,21,21,-42,-43,-44,-45,-59,-60,-61,21,-52,-53,-55,-56,21,-25,-26,-54,-57,-58,-32,21,21,21,21,21,21,21,21,21,]),'RIGHT':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[22,22,-3,-33,-34,-35,-36,-37,22,22,-46,-47,-48,-49,-50,-51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,22,22,-42,-43,-44,-45,-59,-60,-61,22,-52,-53,-55,-56,22,-25,-26,-54,-57,-58,-32,22,22,22,22,22,22,22,22,22,]),'LEFT':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[23,23,-3,-33,-34,-35,-36,-37,23,23,-46,-47,-48,-49,-50,-51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,23,23,-42,-43,-44,-45,-59,-60,-61,23,-52,-53,-55,-56,23,-25,-26,-54,-57,-58,-32,23,23,23,23,23,23,23,23,23,]),'LOOK':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[24,24,-3,-33,-34,-35,-36,-37,24,24,-46,-47,-48,-49,-50,-51,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,24,24,-42,-43,-44,-45,-59,-60,-61,24,-52,-53,-55,-56,24,-25,-26,-54,-57,-58,-32,24,24,24,24,24,24,24,24,24,]),'INC':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[25,25,-3,-33,-34,-35,-36,-37,25,25,-46,-47,-48,-49,-50,-51,25,25,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,25,25,-42,-43,-44,-45,-59,-60,-61,25,-52,-53,-55,-56,25,25,25,-25,-26,-54,-57,-58,-32,25,25,25,25,25,25,25,25,25,]),'DEC':([0,2,3,20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[26,26,-3,-33,-34,-35,-36,-37,26,26,-46,-47,-48,-49,-50,-51,26,26,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,26,26,-42,-43,-44,-45,-59,-60,-61,26,-52,-53,-55,-56,26,26,26,-25,-26,-54,-57,-58,-32,26,26,26,26,26,26,26,26,26,]),'TRUE':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[31,31,-3,31,31,-33,-34,-35,-36,-37,31,31,-46,-47,-48,-49,-50,-51,31,31,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,31,31,-42,-43,-44,-45,-59,-60,-61,31,-52,-53,31,-55,-56,31,-25,-26,-54,-57,-58,-32,31,31,31,31,31,31,31,31,31,]),'FALSE':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[32,32,-3,32,32,-33,-34,-35,-36,-37,32,32,-46,-47,-48,-49,-50,-51,32,32,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,32,32,-42,-43,-44,-45,-59,-60,-61,32,-52,-53,32,-55,-56,32,-25,-26,-54,-57,-58,-32,32,32,32,32,32,32,32,32,32,]),'NOT':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[35,35,-3,35,35,-33,-34,-35,-36,-37,35,35,-46,-47,-48,-49,-50,-51,35,35,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,35,35,-42,-43,-44,-45,-59,-60,-61,35,-52,-53,35,-55,-56,35,-25,-26,-54,-57,-58,-32,35,35,35,35,35,35,35,35,35,]),'OR':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[36,36,-3,36,36,-33,-34,-35,-36,-37,36,36,-46,-47,-48,-49,-50,-51,36,36,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,36,36,-42,-43,-44,-45,-59,-60,-61,36,-52,-53,36,-55,-56,36,-25,-26,-54,-57,-58,-32,36,36,36,36,36,36,36,36,36,]),'LT':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[37,37,-3,37,37,-33,-34,-35,-36,-37,37,37,-46,-47,-48,-49,-50,-51,37,37,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,37,37,-42,-43,-44,-45,-59,-60,-61,37,-52,-53,37,-55,-56,37,-25,-26,-54,-57,-58,-32,37,37,37,37,37,37,37,37,37,]),'GT':([0,2,3,17,18,20,21,22,23,24,25,26,27,28,29,30,31,32,35,36,43,44,45,46,47,48,49,50,51,52,53,55,61,62,63,64,65,66,67,68,69,70,71,73,74,75,78,85,86,87,88,89,92,93,94,96,101,104,105,108,109,111,],[38,38,-3,38,38,-33,-34,-35,-36,-37,38,38,-46,-47,-48,-49,-50,-51,38,38,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,38,38,-42,-43,-44,-45,-59,-60,-61,38,-52,-53,38,-55,-56,38,-25,-26,-54,-57,-58,-32,38,38,38,38,38,38,38,38,38,]),'INT':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[39,39,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,39,39,39,39,39,39,39,39,39,]),'CINT':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[40,40,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,40,40,40,40,40,40,40,40,40,]),'BOOLEAN':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[41,41,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,41,41,41,41,41,41,41,41,41,]),'CBOOLEAN':([0,2,3,43,44,45,46,47,48,49,50,51,52,53,93,94,96,101,104,105,108,109,111,],[42,42,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,42,42,42,42,42,42,42,42,42,]),'$end':([1,2,3,43,44,45,46,47,48,49,50,51,52,53,],[0,-1,-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,]),'RIGHT_BRACKET':([3,43,44,45,46,47,48,49,50,51,52,53,96,104,108,111,],[-3,-2,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,100,107,110,112,]),'NEW_LINE':([4,5,6,7,8,9,10,11,12,13,20,21,22,23,24,27,28,29,30,31,32,44,45,46,47,48,49,50,51,52,53,57,59,62,63,64,65,66,67,68,70,71,74,75,79,82,85,86,87,88,89,90,92,97,98,100,102,106,107,110,112,],[44,45,46,47,48,49,50,51,52,53,-33,-34,-35,-36,-37,-46,-47,-48,-49,-50,-51,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-15,83,-42,-43,-44,-45,-59,-60,-61,-52,-53,-55,-56,-22,93,-25,-26,-54,-57,-58,-14,-32,-27,101,-23,105,109,-28,-29,-24,]),'ASSIGN':([15,],[55,]),'LEFT_SQUARE_BRACKET':([15,60,72,],[56,84,56,]),'INT_DECIMAL':([20,21,22,23,24,25,26,27,28,29,30,31,32,37,38,55,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,85,86,87,88,89,92,],[-33,-34,-35,-36,-37,68,68,-46,-47,-48,-49,-50,-51,68,68,68,68,-42,-43,-44,-45,-59,-60,-61,68,-52,-53,-55,-56,68,68,68,-25,-26,-54,-57,-58,-32,]),'LEFT_BRACKET':([20,21,22,23,24,27,28,29,30,31,32,58,62,63,64,65,66,67,68,70,71,74,75,85,86,87,88,89,92,94,99,103,],[-33,-34,-35,-36,-37,-46,-47,-48,-49,-50,-51,82,-42,-43,-44,-45,-59,-60,-61,-52,-53,-55,-56,-25,-26,-54,-57,-58,-32,98,102,106,]),'EQUAL':([54,],[78,]),'RIGHT_SQUARE_BRACKET':([80,81,91,95,],[-30,92,-31,99,]),'DO':([83,],[94,]),'ELSE':([100,],[103,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'sentence_list':([0,93,101,105,109,],[2,96,104,108,111,]),'single_sentence':([0,2,93,94,96,101,104,105,108,109,111,],[3,43,3,97,43,3,43,3,43,3,43,]),'declaration':([0,2,93,94,96,101,104,105,108,109,111,],[4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,2,93,94,96,101,104,105,108,109,111,],[5,5,5,5,5,5,5,5,5,5,5,]),'if':([0,2,93,94,96,101,104,105,108,109,111,],[6,6,6,6,6,6,6,6,6,6,6,]),'while':([0,2,93,94,96,101,104,105,108,109,111,],[7,7,7,7,7,7,7,7,7,7,7,]),'proc':([0,2,93,94,96,101,104,105,108,109,111,],[8,8,8,8,8,8,8,8,8,8,8,]),'proc_call':([0,2,35,36,73,93,94,96,101,104,105,108,109,111,],[9,9,71,75,75,9,9,9,9,9,9,9,9,9,]),'robot_action':([0,2,25,26,55,61,69,78,93,94,96,101,104,105,108,109,111,],[10,10,65,65,65,65,65,65,10,10,10,10,10,10,10,10,10,]),'inc':([0,2,25,26,37,38,55,61,69,76,77,78,93,94,96,101,104,105,108,109,111,],[11,11,66,66,66,66,66,66,66,66,66,66,11,11,11,11,11,11,11,11,11,]),'dec':([0,2,25,26,37,38,55,61,69,76,77,78,93,94,96,101,104,105,108,109,111,],[12,12,67,67,67,67,67,67,67,67,67,67,12,12,12,12,12,12,12,12,12,]),'logical':([0,2,17,18,25,26,35,36,55,61,69,73,78,93,94,96,101,104,105,108,109,111,],[13,13,58,59,64,64,70,74,64,64,64,74,64,13,13,13,13,13,13,13,13,13,]),'type':([0,2,93,94,96,101,104,105,108,109,111,],[14,14,14,14,14,14,14,14,14,14,14,]),'not':([0,2,17,18,25,26,35,36,55,61,69,73,78,93,94,96,101,104,105,108,109,111,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'or':([0,2,17,18,25,26,35,36,55,61,69,73,78,93,94,96,101,104,105,108,109,111,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'lt':([0,2,17,18,25,26,35,36,55,61,69,73,78,93,94,96,101,104,105,108,109,111,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'gt':([0,2,17,18,25,26,35,36,55,61,69,73,78,93,94,96,101,104,105,108,109,111,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'int':([0,2,93,94,96,101,104,105,108,109,111,],[33,33,33,33,33,33,33,33,33,33,33,]),'boolean':([0,2,93,94,96,101,104,105,108,109,111,],[34,34,34,34,34,34,34,34,34,34,34,]),'expression':([25,26,55,61,69,78,],[61,69,79,85,86,90,]),'math_expression':([25,26,37,38,55,61,69,76,77,78,],[62,62,76,77,62,62,62,88,89,62,]),'or_arg':([36,73,],[73,87,]),'proc_args':([56,84,],[81,95,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> sentence_list','program',1,'p_program','TAParser.py',21),
  ('sentence_list -> sentence_list single_sentence','sentence_list',2,'p_sentence_list','TAParser.py',25),
  ('sentence_list -> single_sentence','sentence_list',1,'p_sentence_list','TAParser.py',26),
  ('single_sentence -> declaration NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',30),
  ('single_sentence -> assignment NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',31),
  ('single_sentence -> if NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',32),
  ('single_sentence -> while NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',33),
  ('single_sentence -> proc NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',34),
  ('single_sentence -> proc_call NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',35),
  ('single_sentence -> robot_action NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',36),
  ('single_sentence -> inc NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',37),
  ('single_sentence -> dec NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',38),
  ('single_sentence -> logical NEW_LINE','single_sentence',2,'p_single_sentence','TAParser.py',39),
  ('declaration -> type VARIABLE EQUAL expression','declaration',4,'p_declaration','TAParser.py',43),
  ('declaration -> MAP VARIABLE','declaration',2,'p_declaration','TAParser.py',44),
  ('type -> int','type',1,'p_type','TAParser.py',48),
  ('type -> boolean','type',1,'p_type','TAParser.py',49),
  ('int -> INT','int',1,'p_int','TAParser.py',60),
  ('int -> CINT','int',1,'p_int','TAParser.py',61),
  ('boolean -> BOOLEAN','boolean',1,'p_boolean','TAParser.py',65),
  ('boolean -> CBOOLEAN','boolean',1,'p_boolean','TAParser.py',66),
  ('assignment -> VARIABLE ASSIGN expression','assignment',3,'p_assignment','TAParser.py',70),
  ('if -> IF logical LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET','if',6,'p_if','TAParser.py',74),
  ('if -> IF logical LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET ELSE LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET','if',11,'p_if','TAParser.py',75),
  ('inc -> INC expression expression','inc',3,'p_inc','TAParser.py',79),
  ('dec -> DEC expression expression','dec',3,'p_dec','TAParser.py',83),
  ('while -> WHILE logical NEW_LINE DO single_sentence','while',5,'p_while','TAParser.py',87),
  ('while -> WHILE logical NEW_LINE DO LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET','while',8,'p_while','TAParser.py',88),
  ('proc -> PROC VARIABLE LEFT_SQUARE_BRACKET proc_args RIGHT_SQUARE_BRACKET LEFT_BRACKET NEW_LINE sentence_list RIGHT_BRACKET','proc',9,'p_proc','TAParser.py',92),
  ('proc_args -> VARIABLE','proc_args',1,'p_proc_args','TAParser.py',96),
  ('proc_args -> proc_args VARIABLE','proc_args',2,'p_proc_args','TAParser.py',97),
  ('proc_call -> VARIABLE LEFT_SQUARE_BRACKET proc_args RIGHT_SQUARE_BRACKET','proc_call',4,'p_proc_call','TAParser.py',101),
  ('robot_action -> STEP','robot_action',1,'p_robot_action','TAParser.py',105),
  ('robot_action -> BACK','robot_action',1,'p_robot_action','TAParser.py',106),
  ('robot_action -> RIGHT','robot_action',1,'p_robot_action','TAParser.py',107),
  ('robot_action -> LEFT','robot_action',1,'p_robot_action','TAParser.py',108),
  ('robot_action -> LOOK','robot_action',1,'p_robot_action','TAParser.py',109),
  ('map_action -> BAR LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET','map_action',7,'p_map_action','TAParser.py',113),
  ('map_action -> EMP LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET','map_action',7,'p_map_action','TAParser.py',114),
  ('map_action -> SET LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET','map_action',7,'p_map_action','TAParser.py',115),
  ('map_action -> CLR LEFT_SQUARE_BRACKET VARIABLE VARIABLE VARIABLE VARIABLE RIGHT_SQUARE_BRACKET','map_action',7,'p_map_action','TAParser.py',116),
  ('expression -> math_expression','expression',1,'p_expression','TAParser.py',120),
  ('expression -> VARIABLE','expression',1,'p_expression','TAParser.py',121),
  ('expression -> logical','expression',1,'p_expression','TAParser.py',122),
  ('expression -> robot_action','expression',1,'p_expression','TAParser.py',123),
  ('logical -> not','logical',1,'p_logical','TAParser.py',127),
  ('logical -> or','logical',1,'p_logical','TAParser.py',128),
  ('logical -> lt','logical',1,'p_logical','TAParser.py',129),
  ('logical -> gt','logical',1,'p_logical','TAParser.py',130),
  ('logical -> TRUE','logical',1,'p_logical','TAParser.py',131),
  ('logical -> FALSE','logical',1,'p_logical','TAParser.py',132),
  ('not -> NOT logical','not',2,'p_not','TAParser.py',136),
  ('not -> NOT proc_call','not',2,'p_not','TAParser.py',137),
  ('or -> OR or_arg or_arg','or',3,'p_or','TAParser.py',141),
  ('or_arg -> logical','or_arg',1,'p_or_arg','TAParser.py',145),
  ('or_arg -> proc_call','or_arg',1,'p_or_arg','TAParser.py',146),
  ('lt -> LT math_expression math_expression','lt',3,'p_lt','TAParser.py',150),
  ('gt -> GT math_expression math_expression','gt',3,'p_gt','TAParser.py',154),
  ('math_expression -> inc','math_expression',1,'p_math_expression','TAParser.py',158),
  ('math_expression -> dec','math_expression',1,'p_math_expression','TAParser.py',159),
  ('math_expression -> INT_DECIMAL','math_expression',1,'p_math_expression','TAParser.py',160),
]
